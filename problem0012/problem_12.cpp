/*
 * The sequence of triangle numbers is generated by adding the natural
 * number. so the 7th triangle number would be 1 + 2 + 3 + ... 7 = 28.
 * The first ten terms would be: 1, 3 , 6, 10, 15, 21, 28, 36, 45, 55
 * 
 *  1: 1
 *  3: 1,3 
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * 
 * we can see that 28 is the first triangle number to have over five divisors.
 * what is the value of the first triangle number to have oever five hundred
 */
#include <iostream>
using namespace std;
int main()
{
	/*
	 * divi_count = divisors
	 * limit = limit of the max number (size)
	 */
	int divi_count, limit = 1000000, prev_num = 0;
	long * tri_num = new long [limit];
	tri_num[0] = 1;
	for (int i = 0; i < limit; i++) {
		divi_count = 0;
		tri_num[i] = prev_num + i;
		prev_num = tri_num[i];
		for (int k = 1; k <= tri_num[i]; k++) {
			if (tri_num[i] % k == 0) {
				divi_count++;
			}
		}
		cout << "num = " << tri_num[i] << " divisor = "  << divi_count << endl;
		if (divi_count > 500) {
			cout << tri_num[i];
			break;
		}
	}
	/* print all array or tri_num
	for (int z = 0; tri_num[z] != '\0'; z++) {
		cout << tri_num[z] << endl;
	}
	*/
	return 0;
}
		
